[{"name":"ANESTHETIST","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.ANESTHETIST","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional-role/-a-n-e-s-t-h-e-t-i-s-t/index.html","searchKeys":["ANESTHETIST","ANESTHETIST","entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.ANESTHETIST"]},{"name":"FEMALE","description":"entity.healthprofessional.HealthProfessionalData.Gender.FEMALE","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-gender/-f-e-m-a-l-e/index.html","searchKeys":["FEMALE","FEMALE","entity.healthprofessional.HealthProfessionalData.Gender.FEMALE"]},{"name":"MALE","description":"entity.healthprofessional.HealthProfessionalData.Gender.MALE","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-gender/-m-a-l-e/index.html","searchKeys":["MALE","MALE","entity.healthprofessional.HealthProfessionalData.Gender.MALE"]},{"name":"NURSE","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.NURSE","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional-role/-n-u-r-s-e/index.html","searchKeys":["NURSE","NURSE","entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.NURSE"]},{"name":"OTHER","description":"entity.healthprofessional.HealthProfessionalData.Gender.OTHER","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-gender/-o-t-h-e-r/index.html","searchKeys":["OTHER","OTHER","entity.healthprofessional.HealthProfessionalData.Gender.OTHER"]},{"name":"SURGEON","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.SURGEON","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional-role/-s-u-r-g-e-o-n/index.html","searchKeys":["SURGEON","SURGEON","entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.SURGEON"]},{"name":"abstract fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): Boolean","description":"application.controller.manager.HealthProfessionalDigitalTwinsManager.createHealthProfessional","location":"user-management-integration-microservice/application.controller.manager/-health-professional-digital-twins-manager/create-health-professional.html","searchKeys":["createHealthProfessional","abstract fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): Boolean","application.controller.manager.HealthProfessionalDigitalTwinsManager.createHealthProfessional"]},{"name":"abstract fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): HealthProfessionalData.HealthProfessional?","description":"application.controller.manager.HealthProfessionalDatabaseManager.createHealthProfessional","location":"user-management-integration-microservice/application.controller.manager/-health-professional-database-manager/create-health-professional.html","searchKeys":["createHealthProfessional","abstract fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): HealthProfessionalData.HealthProfessional?","application.controller.manager.HealthProfessionalDatabaseManager.createHealthProfessional"]},{"name":"abstract fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): HealthProfessionalData.HealthProfessional?","description":"usecase.repository.HealthProfessionalRepository.createHealthProfessional","location":"user-management-integration-microservice/usecase.repository/-health-professional-repository/create-health-professional.html","searchKeys":["createHealthProfessional","abstract fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): HealthProfessionalData.HealthProfessional?","usecase.repository.HealthProfessionalRepository.createHealthProfessional"]},{"name":"abstract fun createUser(user: User): User?","description":"application.controller.manager.UserDatabaseManager.createUser","location":"user-management-integration-microservice/application.controller.manager/-user-database-manager/create-user.html","searchKeys":["createUser","abstract fun createUser(user: User): User?","application.controller.manager.UserDatabaseManager.createUser"]},{"name":"abstract fun createUser(user: User): User?","description":"usecase.repository.UserRepository.createUser","location":"user-management-integration-microservice/usecase.repository/-user-repository/create-user.html","searchKeys":["createUser","abstract fun createUser(user: User): User?","usecase.repository.UserRepository.createUser"]},{"name":"abstract fun deleteHealthProfessional(healthProfessionalId: String): Boolean","description":"application.controller.manager.HealthProfessionalDatabaseManager.deleteHealthProfessional","location":"user-management-integration-microservice/application.controller.manager/-health-professional-database-manager/delete-health-professional.html","searchKeys":["deleteHealthProfessional","abstract fun deleteHealthProfessional(healthProfessionalId: String): Boolean","application.controller.manager.HealthProfessionalDatabaseManager.deleteHealthProfessional"]},{"name":"abstract fun deleteHealthProfessional(healthProfessionalId: String): Boolean","description":"application.controller.manager.HealthProfessionalDigitalTwinsManager.deleteHealthProfessional","location":"user-management-integration-microservice/application.controller.manager/-health-professional-digital-twins-manager/delete-health-professional.html","searchKeys":["deleteHealthProfessional","abstract fun deleteHealthProfessional(healthProfessionalId: String): Boolean","application.controller.manager.HealthProfessionalDigitalTwinsManager.deleteHealthProfessional"]},{"name":"abstract fun deleteHealthProfessional(healthProfessionalId: String): Boolean","description":"usecase.repository.HealthProfessionalRepository.deleteHealthProfessional","location":"user-management-integration-microservice/usecase.repository/-health-professional-repository/delete-health-professional.html","searchKeys":["deleteHealthProfessional","abstract fun deleteHealthProfessional(healthProfessionalId: String): Boolean","usecase.repository.HealthProfessionalRepository.deleteHealthProfessional"]},{"name":"abstract fun deleteUser(userId: String): Boolean","description":"application.controller.manager.UserDatabaseManager.deleteUser","location":"user-management-integration-microservice/application.controller.manager/-user-database-manager/delete-user.html","searchKeys":["deleteUser","abstract fun deleteUser(userId: String): Boolean","application.controller.manager.UserDatabaseManager.deleteUser"]},{"name":"abstract fun deleteUser(userId: String): Boolean","description":"usecase.repository.UserRepository.deleteUser","location":"user-management-integration-microservice/usecase.repository/-user-repository/delete-user.html","searchKeys":["deleteUser","abstract fun deleteUser(userId: String): Boolean","usecase.repository.UserRepository.deleteUser"]},{"name":"abstract fun execute(): E","description":"application.service.ApplicationService.execute","location":"user-management-integration-microservice/application.service/-application-service/execute.html","searchKeys":["execute","abstract fun execute(): E","application.service.ApplicationService.execute"]},{"name":"abstract fun execute(): E","description":"usecase.UseCase.execute","location":"user-management-integration-microservice/usecase/-use-case/execute.html","searchKeys":["execute","abstract fun execute(): E","usecase.UseCase.execute"]},{"name":"abstract fun getHealthProfessional(healthProfessionalId: String): HealthProfessionalData.HealthProfessional?","description":"application.controller.manager.HealthProfessionalDatabaseManager.getHealthProfessional","location":"user-management-integration-microservice/application.controller.manager/-health-professional-database-manager/get-health-professional.html","searchKeys":["getHealthProfessional","abstract fun getHealthProfessional(healthProfessionalId: String): HealthProfessionalData.HealthProfessional?","application.controller.manager.HealthProfessionalDatabaseManager.getHealthProfessional"]},{"name":"abstract fun getHealthProfessional(healthProfessionalId: String): HealthProfessionalData.HealthProfessional?","description":"usecase.repository.HealthProfessionalRepository.getHealthProfessional","location":"user-management-integration-microservice/usecase.repository/-health-professional-repository/get-health-professional.html","searchKeys":["getHealthProfessional","abstract fun getHealthProfessional(healthProfessionalId: String): HealthProfessionalData.HealthProfessional?","usecase.repository.HealthProfessionalRepository.getHealthProfessional"]},{"name":"abstract fun getUser(userId: String): User?","description":"application.controller.manager.UserDatabaseManager.getUser","location":"user-management-integration-microservice/application.controller.manager/-user-database-manager/get-user.html","searchKeys":["getUser","abstract fun getUser(userId: String): User?","application.controller.manager.UserDatabaseManager.getUser"]},{"name":"abstract fun getUser(userId: String): User?","description":"usecase.repository.UserRepository.getUser","location":"user-management-integration-microservice/usecase.repository/-user-repository/get-user.html","searchKeys":["getUser","abstract fun getUser(userId: String): User?","usecase.repository.UserRepository.getUser"]},{"name":"abstract val healthProfessionalDatabaseManager: HealthProfessionalDatabaseManager","description":"infrastructure.provider.Provider.healthProfessionalDatabaseManager","location":"user-management-integration-microservice/infrastructure.provider/-provider/health-professional-database-manager.html","searchKeys":["healthProfessionalDatabaseManager","abstract val healthProfessionalDatabaseManager: HealthProfessionalDatabaseManager","infrastructure.provider.Provider.healthProfessionalDatabaseManager"]},{"name":"abstract val healthProfessionalDigitalTwinsManager: HealthProfessionalDigitalTwinsManager","description":"infrastructure.provider.Provider.healthProfessionalDigitalTwinsManager","location":"user-management-integration-microservice/infrastructure.provider/-provider/health-professional-digital-twins-manager.html","searchKeys":["healthProfessionalDigitalTwinsManager","abstract val healthProfessionalDigitalTwinsManager: HealthProfessionalDigitalTwinsManager","infrastructure.provider.Provider.healthProfessionalDigitalTwinsManager"]},{"name":"abstract val userDatabaseManager: UserDatabaseManager","description":"infrastructure.provider.Provider.userDatabaseManager","location":"user-management-integration-microservice/infrastructure.provider/-provider/user-database-manager.html","searchKeys":["userDatabaseManager","abstract val userDatabaseManager: UserDatabaseManager","infrastructure.provider.Provider.userDatabaseManager"]},{"name":"class APIRouter(provider: Provider)","description":"infrastructure.api.APIRouter","location":"user-management-integration-microservice/infrastructure.api/-a-p-i-router/index.html","searchKeys":["APIRouter","class APIRouter(provider: Provider)","infrastructure.api.APIRouter"]},{"name":"class AuthenticationUseCase(userId: String, password: String, userRepository: UserRepository) : UseCase<Boolean> ","description":"usecase.AuthenticationUseCase","location":"user-management-integration-microservice/usecase/-authentication-use-case/index.html","searchKeys":["AuthenticationUseCase","class AuthenticationUseCase(userId: String, password: String, userRepository: UserRepository) : UseCase<Boolean> ","usecase.AuthenticationUseCase"]},{"name":"class AzureDTClient : HealthProfessionalDigitalTwinsManager","description":"infrastructure.digitaltwins.AzureDTClient","location":"user-management-integration-microservice/infrastructure.digitaltwins/-azure-d-t-client/index.html","searchKeys":["AzureDTClient","class AzureDTClient : HealthProfessionalDigitalTwinsManager","infrastructure.digitaltwins.AzureDTClient"]},{"name":"class CreateHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional, healthProfessionalRepository: HealthProfessionalRepository) : ApplicationService<HealthProfessionalData.HealthProfessional?> ","description":"application.service.HealthProfessionalServices.CreateHealthProfessional","location":"user-management-integration-microservice/application.service/-health-professional-services/-create-health-professional/index.html","searchKeys":["CreateHealthProfessional","class CreateHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional, healthProfessionalRepository: HealthProfessionalRepository) : ApplicationService<HealthProfessionalData.HealthProfessional?> ","application.service.HealthProfessionalServices.CreateHealthProfessional"]},{"name":"class CreateUser(user: User, userRepository: UserRepository) : ApplicationService<User?> ","description":"application.service.UserServices.CreateUser","location":"user-management-integration-microservice/application.service/-user-services/-create-user/index.html","searchKeys":["CreateUser","class CreateUser(user: User, userRepository: UserRepository) : ApplicationService<User?> ","application.service.UserServices.CreateUser"]},{"name":"class DeleteHealthProfessional(healthProfessionalId: String, healthProfessionalRepository: HealthProfessionalRepository) : ApplicationService<Boolean> ","description":"application.service.HealthProfessionalServices.DeleteHealthProfessional","location":"user-management-integration-microservice/application.service/-health-professional-services/-delete-health-professional/index.html","searchKeys":["DeleteHealthProfessional","class DeleteHealthProfessional(healthProfessionalId: String, healthProfessionalRepository: HealthProfessionalRepository) : ApplicationService<Boolean> ","application.service.HealthProfessionalServices.DeleteHealthProfessional"]},{"name":"class DeleteUser(userId: String, userRepository: UserRepository) : ApplicationService<Boolean> ","description":"application.service.UserServices.DeleteUser","location":"user-management-integration-microservice/application.service/-user-services/-delete-user/index.html","searchKeys":["DeleteUser","class DeleteUser(userId: String, userRepository: UserRepository) : ApplicationService<Boolean> ","application.service.UserServices.DeleteUser"]},{"name":"class GetHealthProfessional(healthProfessionalId: String, healthProfessionalRepository: HealthProfessionalRepository) : ApplicationService<HealthProfessionalData.HealthProfessional?> ","description":"application.service.HealthProfessionalServices.GetHealthProfessional","location":"user-management-integration-microservice/application.service/-health-professional-services/-get-health-professional/index.html","searchKeys":["GetHealthProfessional","class GetHealthProfessional(healthProfessionalId: String, healthProfessionalRepository: HealthProfessionalRepository) : ApplicationService<HealthProfessionalData.HealthProfessional?> ","application.service.HealthProfessionalServices.GetHealthProfessional"]},{"name":"class GetUser(userId: String, userRepository: UserRepository) : ApplicationService<User?> ","description":"application.service.UserServices.GetUser","location":"user-management-integration-microservice/application.service/-user-services/-get-user/index.html","searchKeys":["GetUser","class GetUser(userId: String, userRepository: UserRepository) : ApplicationService<User?> ","application.service.UserServices.GetUser"]},{"name":"class HealthProfessionalController(dbManager: HealthProfessionalDatabaseManager, dtManager: HealthProfessionalDigitalTwinsManager) : HealthProfessionalRepository","description":"application.controller.HealthProfessionalController","location":"user-management-integration-microservice/application.controller/-health-professional-controller/index.html","searchKeys":["HealthProfessionalController","class HealthProfessionalController(dbManager: HealthProfessionalDatabaseManager, dtManager: HealthProfessionalDigitalTwinsManager) : HealthProfessionalRepository","application.controller.HealthProfessionalController"]},{"name":"class MongoClient(connectionString: String) : UserDatabaseManager, HealthProfessionalDatabaseManager","description":"infrastructure.database.MongoClient","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/index.html","searchKeys":["MongoClient","class MongoClient(connectionString: String) : UserDatabaseManager, HealthProfessionalDatabaseManager","infrastructure.database.MongoClient"]},{"name":"class ProviderImpl : Provider","description":"infrastructure.provider.ProviderImpl","location":"user-management-integration-microservice/infrastructure.provider/-provider-impl/index.html","searchKeys":["ProviderImpl","class ProviderImpl : Provider","infrastructure.provider.ProviderImpl"]},{"name":"class UserController(dbManager: UserDatabaseManager) : UserRepository","description":"application.controller.UserController","location":"user-management-integration-microservice/application.controller/-user-controller/index.html","searchKeys":["UserController","class UserController(dbManager: UserDatabaseManager) : UserRepository","application.controller.UserController"]},{"name":"const val NETTY_PORT: Int = 3000","description":"infrastructure.api.APIRouter.Companion.NETTY_PORT","location":"user-management-integration-microservice/infrastructure.api/-a-p-i-router/-companion/-n-e-t-t-y_-p-o-r-t.html","searchKeys":["NETTY_PORT","const val NETTY_PORT: Int = 3000","infrastructure.api.APIRouter.Companion.NETTY_PORT"]},{"name":"const val PASSWORD_MAX_LENGTH: Int = 20","description":"entity.user.UserData.PASSWORD_MAX_LENGTH","location":"user-management-integration-microservice/entity.user/-user-data/-p-a-s-s-w-o-r-d_-m-a-x_-l-e-n-g-t-h.html","searchKeys":["PASSWORD_MAX_LENGTH","const val PASSWORD_MAX_LENGTH: Int = 20","entity.user.UserData.PASSWORD_MAX_LENGTH"]},{"name":"const val PASSWORD_MIN_LENGTH: Int = 8","description":"entity.user.UserData.PASSWORD_MIN_LENGTH","location":"user-management-integration-microservice/entity.user/-user-data/-p-a-s-s-w-o-r-d_-m-i-n_-l-e-n-g-t-h.html","searchKeys":["PASSWORD_MIN_LENGTH","const val PASSWORD_MIN_LENGTH: Int = 8","entity.user.UserData.PASSWORD_MIN_LENGTH"]},{"name":"const val databaseName: String","description":"infrastructure.database.MongoClient.Companion.databaseName","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/-companion/database-name.html","searchKeys":["databaseName","const val databaseName: String","infrastructure.database.MongoClient.Companion.databaseName"]},{"name":"constructor()","description":"infrastructure.digitaltwins.AzureDTClient.AzureDTClient","location":"user-management-integration-microservice/infrastructure.digitaltwins/-azure-d-t-client/-azure-d-t-client.html","searchKeys":["AzureDTClient","constructor()","infrastructure.digitaltwins.AzureDTClient.AzureDTClient"]},{"name":"constructor()","description":"infrastructure.provider.ProviderImpl.ProviderImpl","location":"user-management-integration-microservice/infrastructure.provider/-provider-impl/-provider-impl.html","searchKeys":["ProviderImpl","constructor()","infrastructure.provider.ProviderImpl.ProviderImpl"]},{"name":"constructor(connectionString: String)","description":"infrastructure.database.MongoClient.MongoClient","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/-mongo-client.html","searchKeys":["MongoClient","constructor(connectionString: String)","infrastructure.database.MongoClient.MongoClient"]},{"name":"constructor(dbManager: HealthProfessionalDatabaseManager, dtManager: HealthProfessionalDigitalTwinsManager)","description":"application.controller.HealthProfessionalController.HealthProfessionalController","location":"user-management-integration-microservice/application.controller/-health-professional-controller/-health-professional-controller.html","searchKeys":["HealthProfessionalController","constructor(dbManager: HealthProfessionalDatabaseManager, dtManager: HealthProfessionalDigitalTwinsManager)","application.controller.HealthProfessionalController.HealthProfessionalController"]},{"name":"constructor(dbManager: UserDatabaseManager)","description":"application.controller.UserController.UserController","location":"user-management-integration-microservice/application.controller/-user-controller/-user-controller.html","searchKeys":["UserController","constructor(dbManager: UserDatabaseManager)","application.controller.UserController.UserController"]},{"name":"constructor(healthProfessional: HealthProfessionalData.HealthProfessional, healthProfessionalRepository: HealthProfessionalRepository)","description":"application.service.HealthProfessionalServices.CreateHealthProfessional.CreateHealthProfessional","location":"user-management-integration-microservice/application.service/-health-professional-services/-create-health-professional/-create-health-professional.html","searchKeys":["CreateHealthProfessional","constructor(healthProfessional: HealthProfessionalData.HealthProfessional, healthProfessionalRepository: HealthProfessionalRepository)","application.service.HealthProfessionalServices.CreateHealthProfessional.CreateHealthProfessional"]},{"name":"constructor(healthProfessionalId: String, healthProfessionalRepository: HealthProfessionalRepository)","description":"application.service.HealthProfessionalServices.DeleteHealthProfessional.DeleteHealthProfessional","location":"user-management-integration-microservice/application.service/-health-professional-services/-delete-health-professional/-delete-health-professional.html","searchKeys":["DeleteHealthProfessional","constructor(healthProfessionalId: String, healthProfessionalRepository: HealthProfessionalRepository)","application.service.HealthProfessionalServices.DeleteHealthProfessional.DeleteHealthProfessional"]},{"name":"constructor(healthProfessionalId: String, healthProfessionalRepository: HealthProfessionalRepository)","description":"application.service.HealthProfessionalServices.GetHealthProfessional.GetHealthProfessional","location":"user-management-integration-microservice/application.service/-health-professional-services/-get-health-professional/-get-health-professional.html","searchKeys":["GetHealthProfessional","constructor(healthProfessionalId: String, healthProfessionalRepository: HealthProfessionalRepository)","application.service.HealthProfessionalServices.GetHealthProfessional.GetHealthProfessional"]},{"name":"constructor(healthProfessionalId: String, name: String, surname: String, gender: HealthProfessionalData.Gender, birthdate: String, emailAddress: String, phoneNumber: String, role: HealthProfessionalData.HealthProfessionalRole)","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.HealthProfessional","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/-health-professional.html","searchKeys":["HealthProfessional","constructor(healthProfessionalId: String, name: String, surname: String, gender: HealthProfessionalData.Gender, birthdate: String, emailAddress: String, phoneNumber: String, role: HealthProfessionalData.HealthProfessionalRole)","entity.healthprofessional.HealthProfessionalData.HealthProfessional.HealthProfessional"]},{"name":"constructor(provider: Provider)","description":"infrastructure.api.APIRouter.APIRouter","location":"user-management-integration-microservice/infrastructure.api/-a-p-i-router/-a-p-i-router.html","searchKeys":["APIRouter","constructor(provider: Provider)","infrastructure.api.APIRouter.APIRouter"]},{"name":"constructor(user: User, userRepository: UserRepository)","description":"application.service.UserServices.CreateUser.CreateUser","location":"user-management-integration-microservice/application.service/-user-services/-create-user/-create-user.html","searchKeys":["CreateUser","constructor(user: User, userRepository: UserRepository)","application.service.UserServices.CreateUser.CreateUser"]},{"name":"constructor(userId: String, password: String)","description":"entity.user.User.User","location":"user-management-integration-microservice/entity.user/-user/-user.html","searchKeys":["User","constructor(userId: String, password: String)","entity.user.User.User"]},{"name":"constructor(userId: String, password: String, userRepository: UserRepository)","description":"usecase.AuthenticationUseCase.AuthenticationUseCase","location":"user-management-integration-microservice/usecase/-authentication-use-case/-authentication-use-case.html","searchKeys":["AuthenticationUseCase","constructor(userId: String, password: String, userRepository: UserRepository)","usecase.AuthenticationUseCase.AuthenticationUseCase"]},{"name":"constructor(userId: String, userRepository: UserRepository)","description":"application.service.UserServices.DeleteUser.DeleteUser","location":"user-management-integration-microservice/application.service/-user-services/-delete-user/-delete-user.html","searchKeys":["DeleteUser","constructor(userId: String, userRepository: UserRepository)","application.service.UserServices.DeleteUser.DeleteUser"]},{"name":"constructor(userId: String, userRepository: UserRepository)","description":"application.service.UserServices.GetUser.GetUser","location":"user-management-integration-microservice/application.service/-user-services/-get-user/-get-user.html","searchKeys":["GetUser","constructor(userId: String, userRepository: UserRepository)","application.service.UserServices.GetUser.GetUser"]},{"name":"data class HealthProfessional(val healthProfessionalId: String, val name: String, val surname: String, val gender: HealthProfessionalData.Gender, val birthdate: String, val emailAddress: String, val phoneNumber: String, val role: HealthProfessionalData.HealthProfessionalRole)","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/index.html","searchKeys":["HealthProfessional","data class HealthProfessional(val healthProfessionalId: String, val name: String, val surname: String, val gender: HealthProfessionalData.Gender, val birthdate: String, val emailAddress: String, val phoneNumber: String, val role: HealthProfessionalData.HealthProfessionalRole)","entity.healthprofessional.HealthProfessionalData.HealthProfessional"]},{"name":"data class User(val userId: String, val password: String)","description":"entity.user.User","location":"user-management-integration-microservice/entity.user/-user/index.html","searchKeys":["User","data class User(val userId: String, val password: String)","entity.user.User"]},{"name":"enum Gender : Enum<HealthProfessionalData.Gender> ","description":"entity.healthprofessional.HealthProfessionalData.Gender","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-gender/index.html","searchKeys":["Gender","enum Gender : Enum<HealthProfessionalData.Gender> ","entity.healthprofessional.HealthProfessionalData.Gender"]},{"name":"enum HealthProfessionalRole : Enum<HealthProfessionalData.HealthProfessionalRole> ","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional-role/index.html","searchKeys":["HealthProfessionalRole","enum HealthProfessionalRole : Enum<HealthProfessionalData.HealthProfessionalRole> ","entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole"]},{"name":"fun HealthProfessionalData.HealthProfessional.toDigitalTwin(): BasicDigitalTwin","description":"infrastructure.digitaltwins.adtpresenter.HealthProfessionalAdt.toDigitalTwin","location":"user-management-integration-microservice/infrastructure.digitaltwins.adtpresenter/-health-professional-adt/to-digital-twin.html","searchKeys":["toDigitalTwin","fun HealthProfessionalData.HealthProfessional.toDigitalTwin(): BasicDigitalTwin","infrastructure.digitaltwins.adtpresenter.HealthProfessionalAdt.toDigitalTwin"]},{"name":"fun Route.authAPI(provider: Provider, apiPath: String)","description":"infrastructure.api.routes.authAPI","location":"user-management-integration-microservice/infrastructure.api.routes/auth-a-p-i.html","searchKeys":["authAPI","fun Route.authAPI(provider: Provider, apiPath: String)","infrastructure.api.routes.authAPI"]},{"name":"fun Route.healthProfessionalAPI(provider: Provider, apiPath: String)","description":"infrastructure.api.routes.healthProfessionalAPI","location":"user-management-integration-microservice/infrastructure.api.routes/health-professional-a-p-i.html","searchKeys":["healthProfessionalAPI","fun Route.healthProfessionalAPI(provider: Provider, apiPath: String)","infrastructure.api.routes.healthProfessionalAPI"]},{"name":"fun Route.userAPI(provider: Provider, apiPath: String)","description":"infrastructure.api.routes.userAPI","location":"user-management-integration-microservice/infrastructure.api.routes/user-a-p-i.html","searchKeys":["userAPI","fun Route.userAPI(provider: Provider, apiPath: String)","infrastructure.api.routes.userAPI"]},{"name":"fun getDatabase(databaseName: String): MongoDatabase","description":"infrastructure.database.MongoClient.getDatabase","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/get-database.html","searchKeys":["getDatabase","fun getDatabase(databaseName: String): MongoDatabase","infrastructure.database.MongoClient.getDatabase"]},{"name":"fun interface ApplicationService<out E>","description":"application.service.ApplicationService","location":"user-management-integration-microservice/application.service/-application-service/index.html","searchKeys":["ApplicationService","fun interface ApplicationService<out E>","application.service.ApplicationService"]},{"name":"fun interface UseCase<out E>","description":"usecase.UseCase","location":"user-management-integration-microservice/usecase/-use-case/index.html","searchKeys":["UseCase","fun interface UseCase<out E>","usecase.UseCase"]},{"name":"fun main()","description":"main","location":"user-management-integration-microservice/[root]/main.html","searchKeys":["main","fun main()","main"]},{"name":"fun module(app: Application)","description":"infrastructure.api.APIRouter.module","location":"user-management-integration-microservice/infrastructure.api/-a-p-i-router/module.html","searchKeys":["module","fun module(app: Application)","infrastructure.api.APIRouter.module"]},{"name":"fun start()","description":"infrastructure.api.APIRouter.start","location":"user-management-integration-microservice/infrastructure.api/-a-p-i-router/start.html","searchKeys":["start","fun start()","infrastructure.api.APIRouter.start"]},{"name":"fun valueOf(value: String): HealthProfessionalData.Gender","description":"entity.healthprofessional.HealthProfessionalData.Gender.valueOf","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-gender/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HealthProfessionalData.Gender","entity.healthprofessional.HealthProfessionalData.Gender.valueOf"]},{"name":"fun valueOf(value: String): HealthProfessionalData.HealthProfessionalRole","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.valueOf","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional-role/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): HealthProfessionalData.HealthProfessionalRole","entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.valueOf"]},{"name":"fun values(): Array<HealthProfessionalData.Gender>","description":"entity.healthprofessional.HealthProfessionalData.Gender.values","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-gender/values.html","searchKeys":["values","fun values(): Array<HealthProfessionalData.Gender>","entity.healthprofessional.HealthProfessionalData.Gender.values"]},{"name":"fun values(): Array<HealthProfessionalData.HealthProfessionalRole>","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.values","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional-role/values.html","searchKeys":["values","fun values(): Array<HealthProfessionalData.HealthProfessionalRole>","entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.values"]},{"name":"interface HealthProfessionalDatabaseManager","description":"application.controller.manager.HealthProfessionalDatabaseManager","location":"user-management-integration-microservice/application.controller.manager/-health-professional-database-manager/index.html","searchKeys":["HealthProfessionalDatabaseManager","interface HealthProfessionalDatabaseManager","application.controller.manager.HealthProfessionalDatabaseManager"]},{"name":"interface HealthProfessionalDigitalTwinsManager","description":"application.controller.manager.HealthProfessionalDigitalTwinsManager","location":"user-management-integration-microservice/application.controller.manager/-health-professional-digital-twins-manager/index.html","searchKeys":["HealthProfessionalDigitalTwinsManager","interface HealthProfessionalDigitalTwinsManager","application.controller.manager.HealthProfessionalDigitalTwinsManager"]},{"name":"interface HealthProfessionalRepository","description":"usecase.repository.HealthProfessionalRepository","location":"user-management-integration-microservice/usecase.repository/-health-professional-repository/index.html","searchKeys":["HealthProfessionalRepository","interface HealthProfessionalRepository","usecase.repository.HealthProfessionalRepository"]},{"name":"interface Provider","description":"infrastructure.provider.Provider","location":"user-management-integration-microservice/infrastructure.provider/-provider/index.html","searchKeys":["Provider","interface Provider","infrastructure.provider.Provider"]},{"name":"interface UserDatabaseManager","description":"application.controller.manager.UserDatabaseManager","location":"user-management-integration-microservice/application.controller.manager/-user-database-manager/index.html","searchKeys":["UserDatabaseManager","interface UserDatabaseManager","application.controller.manager.UserDatabaseManager"]},{"name":"interface UserRepository","description":"usecase.repository.UserRepository","location":"user-management-integration-microservice/usecase.repository/-user-repository/index.html","searchKeys":["UserRepository","interface UserRepository","usecase.repository.UserRepository"]},{"name":"object Companion","description":"infrastructure.api.APIRouter.Companion","location":"user-management-integration-microservice/infrastructure.api/-a-p-i-router/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.api.APIRouter.Companion"]},{"name":"object Companion","description":"infrastructure.database.MongoClient.Companion","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/-companion/index.html","searchKeys":["Companion","object Companion","infrastructure.database.MongoClient.Companion"]},{"name":"object HealthProfessionalAdt","description":"infrastructure.digitaltwins.adtpresenter.HealthProfessionalAdt","location":"user-management-integration-microservice/infrastructure.digitaltwins.adtpresenter/-health-professional-adt/index.html","searchKeys":["HealthProfessionalAdt","object HealthProfessionalAdt","infrastructure.digitaltwins.adtpresenter.HealthProfessionalAdt"]},{"name":"object HealthProfessionalData","description":"entity.healthprofessional.HealthProfessionalData","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/index.html","searchKeys":["HealthProfessionalData","object HealthProfessionalData","entity.healthprofessional.HealthProfessionalData"]},{"name":"object HealthProfessionalServices","description":"application.service.HealthProfessionalServices","location":"user-management-integration-microservice/application.service/-health-professional-services/index.html","searchKeys":["HealthProfessionalServices","object HealthProfessionalServices","application.service.HealthProfessionalServices"]},{"name":"object UserData","description":"entity.user.UserData","location":"user-management-integration-microservice/entity.user/-user-data/index.html","searchKeys":["UserData","object UserData","entity.user.UserData"]},{"name":"object UserServices","description":"application.service.UserServices","location":"user-management-integration-microservice/application.service/-user-services/index.html","searchKeys":["UserServices","object UserServices","application.service.UserServices"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.equals","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.healthprofessional.HealthProfessionalData.HealthProfessional.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"entity.user.User.equals","location":"user-management-integration-microservice/entity.user/-user/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","entity.user.User.equals"]},{"name":"open override fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): Boolean","description":"infrastructure.digitaltwins.AzureDTClient.createHealthProfessional","location":"user-management-integration-microservice/infrastructure.digitaltwins/-azure-d-t-client/create-health-professional.html","searchKeys":["createHealthProfessional","open override fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): Boolean","infrastructure.digitaltwins.AzureDTClient.createHealthProfessional"]},{"name":"open override fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): HealthProfessionalData.HealthProfessional?","description":"application.controller.HealthProfessionalController.createHealthProfessional","location":"user-management-integration-microservice/application.controller/-health-professional-controller/create-health-professional.html","searchKeys":["createHealthProfessional","open override fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): HealthProfessionalData.HealthProfessional?","application.controller.HealthProfessionalController.createHealthProfessional"]},{"name":"open override fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): HealthProfessionalData.HealthProfessional?","description":"infrastructure.database.MongoClient.createHealthProfessional","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/create-health-professional.html","searchKeys":["createHealthProfessional","open override fun createHealthProfessional(healthProfessional: HealthProfessionalData.HealthProfessional): HealthProfessionalData.HealthProfessional?","infrastructure.database.MongoClient.createHealthProfessional"]},{"name":"open override fun createUser(user: User): User?","description":"application.controller.UserController.createUser","location":"user-management-integration-microservice/application.controller/-user-controller/create-user.html","searchKeys":["createUser","open override fun createUser(user: User): User?","application.controller.UserController.createUser"]},{"name":"open override fun createUser(user: User): User?","description":"infrastructure.database.MongoClient.createUser","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/create-user.html","searchKeys":["createUser","open override fun createUser(user: User): User?","infrastructure.database.MongoClient.createUser"]},{"name":"open override fun deleteHealthProfessional(healthProfessionalId: String): Boolean","description":"application.controller.HealthProfessionalController.deleteHealthProfessional","location":"user-management-integration-microservice/application.controller/-health-professional-controller/delete-health-professional.html","searchKeys":["deleteHealthProfessional","open override fun deleteHealthProfessional(healthProfessionalId: String): Boolean","application.controller.HealthProfessionalController.deleteHealthProfessional"]},{"name":"open override fun deleteHealthProfessional(healthProfessionalId: String): Boolean","description":"infrastructure.database.MongoClient.deleteHealthProfessional","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/delete-health-professional.html","searchKeys":["deleteHealthProfessional","open override fun deleteHealthProfessional(healthProfessionalId: String): Boolean","infrastructure.database.MongoClient.deleteHealthProfessional"]},{"name":"open override fun deleteHealthProfessional(healthProfessionalId: String): Boolean","description":"infrastructure.digitaltwins.AzureDTClient.deleteHealthProfessional","location":"user-management-integration-microservice/infrastructure.digitaltwins/-azure-d-t-client/delete-health-professional.html","searchKeys":["deleteHealthProfessional","open override fun deleteHealthProfessional(healthProfessionalId: String): Boolean","infrastructure.digitaltwins.AzureDTClient.deleteHealthProfessional"]},{"name":"open override fun deleteUser(userId: String): Boolean","description":"application.controller.UserController.deleteUser","location":"user-management-integration-microservice/application.controller/-user-controller/delete-user.html","searchKeys":["deleteUser","open override fun deleteUser(userId: String): Boolean","application.controller.UserController.deleteUser"]},{"name":"open override fun deleteUser(userId: String): Boolean","description":"infrastructure.database.MongoClient.deleteUser","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/delete-user.html","searchKeys":["deleteUser","open override fun deleteUser(userId: String): Boolean","infrastructure.database.MongoClient.deleteUser"]},{"name":"open override fun execute(): Boolean","description":"application.service.HealthProfessionalServices.DeleteHealthProfessional.execute","location":"user-management-integration-microservice/application.service/-health-professional-services/-delete-health-professional/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.HealthProfessionalServices.DeleteHealthProfessional.execute"]},{"name":"open override fun execute(): Boolean","description":"application.service.UserServices.DeleteUser.execute","location":"user-management-integration-microservice/application.service/-user-services/-delete-user/execute.html","searchKeys":["execute","open override fun execute(): Boolean","application.service.UserServices.DeleteUser.execute"]},{"name":"open override fun execute(): Boolean","description":"usecase.AuthenticationUseCase.execute","location":"user-management-integration-microservice/usecase/-authentication-use-case/execute.html","searchKeys":["execute","open override fun execute(): Boolean","usecase.AuthenticationUseCase.execute"]},{"name":"open override fun execute(): HealthProfessionalData.HealthProfessional?","description":"application.service.HealthProfessionalServices.CreateHealthProfessional.execute","location":"user-management-integration-microservice/application.service/-health-professional-services/-create-health-professional/execute.html","searchKeys":["execute","open override fun execute(): HealthProfessionalData.HealthProfessional?","application.service.HealthProfessionalServices.CreateHealthProfessional.execute"]},{"name":"open override fun execute(): HealthProfessionalData.HealthProfessional?","description":"application.service.HealthProfessionalServices.GetHealthProfessional.execute","location":"user-management-integration-microservice/application.service/-health-professional-services/-get-health-professional/execute.html","searchKeys":["execute","open override fun execute(): HealthProfessionalData.HealthProfessional?","application.service.HealthProfessionalServices.GetHealthProfessional.execute"]},{"name":"open override fun execute(): User?","description":"application.service.UserServices.CreateUser.execute","location":"user-management-integration-microservice/application.service/-user-services/-create-user/execute.html","searchKeys":["execute","open override fun execute(): User?","application.service.UserServices.CreateUser.execute"]},{"name":"open override fun execute(): User?","description":"application.service.UserServices.GetUser.execute","location":"user-management-integration-microservice/application.service/-user-services/-get-user/execute.html","searchKeys":["execute","open override fun execute(): User?","application.service.UserServices.GetUser.execute"]},{"name":"open override fun getHealthProfessional(healthProfessionalId: String): HealthProfessionalData.HealthProfessional?","description":"application.controller.HealthProfessionalController.getHealthProfessional","location":"user-management-integration-microservice/application.controller/-health-professional-controller/get-health-professional.html","searchKeys":["getHealthProfessional","open override fun getHealthProfessional(healthProfessionalId: String): HealthProfessionalData.HealthProfessional?","application.controller.HealthProfessionalController.getHealthProfessional"]},{"name":"open override fun getHealthProfessional(healthProfessionalId: String): HealthProfessionalData.HealthProfessional?","description":"infrastructure.database.MongoClient.getHealthProfessional","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/get-health-professional.html","searchKeys":["getHealthProfessional","open override fun getHealthProfessional(healthProfessionalId: String): HealthProfessionalData.HealthProfessional?","infrastructure.database.MongoClient.getHealthProfessional"]},{"name":"open override fun getUser(userId: String): User?","description":"application.controller.UserController.getUser","location":"user-management-integration-microservice/application.controller/-user-controller/get-user.html","searchKeys":["getUser","open override fun getUser(userId: String): User?","application.controller.UserController.getUser"]},{"name":"open override fun getUser(userId: String): User?","description":"infrastructure.database.MongoClient.getUser","location":"user-management-integration-microservice/infrastructure.database/-mongo-client/get-user.html","searchKeys":["getUser","open override fun getUser(userId: String): User?","infrastructure.database.MongoClient.getUser"]},{"name":"open override fun hashCode(): Int","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.hashCode","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.healthprofessional.HealthProfessionalData.HealthProfessional.hashCode"]},{"name":"open override fun hashCode(): Int","description":"entity.user.User.hashCode","location":"user-management-integration-microservice/entity.user/-user/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","entity.user.User.hashCode"]},{"name":"open override val healthProfessionalDatabaseManager: HealthProfessionalDatabaseManager","description":"infrastructure.provider.ProviderImpl.healthProfessionalDatabaseManager","location":"user-management-integration-microservice/infrastructure.provider/-provider-impl/health-professional-database-manager.html","searchKeys":["healthProfessionalDatabaseManager","open override val healthProfessionalDatabaseManager: HealthProfessionalDatabaseManager","infrastructure.provider.ProviderImpl.healthProfessionalDatabaseManager"]},{"name":"open override val healthProfessionalDigitalTwinsManager: HealthProfessionalDigitalTwinsManager","description":"infrastructure.provider.ProviderImpl.healthProfessionalDigitalTwinsManager","location":"user-management-integration-microservice/infrastructure.provider/-provider-impl/health-professional-digital-twins-manager.html","searchKeys":["healthProfessionalDigitalTwinsManager","open override val healthProfessionalDigitalTwinsManager: HealthProfessionalDigitalTwinsManager","infrastructure.provider.ProviderImpl.healthProfessionalDigitalTwinsManager"]},{"name":"open override val userDatabaseManager: UserDatabaseManager","description":"infrastructure.provider.ProviderImpl.userDatabaseManager","location":"user-management-integration-microservice/infrastructure.provider/-provider-impl/user-database-manager.html","searchKeys":["userDatabaseManager","open override val userDatabaseManager: UserDatabaseManager","infrastructure.provider.ProviderImpl.userDatabaseManager"]},{"name":"val birthdate: String","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.birthdate","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/birthdate.html","searchKeys":["birthdate","val birthdate: String","entity.healthprofessional.HealthProfessionalData.HealthProfessional.birthdate"]},{"name":"val emailAddress: String","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.emailAddress","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/email-address.html","searchKeys":["emailAddress","val emailAddress: String","entity.healthprofessional.HealthProfessionalData.HealthProfessional.emailAddress"]},{"name":"val entries: EnumEntries<HealthProfessionalData.Gender>","description":"entity.healthprofessional.HealthProfessionalData.Gender.entries","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-gender/entries.html","searchKeys":["entries","val entries: EnumEntries<HealthProfessionalData.Gender>","entity.healthprofessional.HealthProfessionalData.Gender.entries"]},{"name":"val entries: EnumEntries<HealthProfessionalData.HealthProfessionalRole>","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.entries","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional-role/entries.html","searchKeys":["entries","val entries: EnumEntries<HealthProfessionalData.HealthProfessionalRole>","entity.healthprofessional.HealthProfessionalData.HealthProfessionalRole.entries"]},{"name":"val gender: HealthProfessionalData.Gender","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.gender","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/gender.html","searchKeys":["gender","val gender: HealthProfessionalData.Gender","entity.healthprofessional.HealthProfessionalData.HealthProfessional.gender"]},{"name":"val healthProfessionalId: String","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.healthProfessionalId","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/health-professional-id.html","searchKeys":["healthProfessionalId","val healthProfessionalId: String","entity.healthprofessional.HealthProfessionalData.HealthProfessional.healthProfessionalId"]},{"name":"val name: String","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.name","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/name.html","searchKeys":["name","val name: String","entity.healthprofessional.HealthProfessionalData.HealthProfessional.name"]},{"name":"val password: String","description":"entity.user.User.password","location":"user-management-integration-microservice/entity.user/-user/password.html","searchKeys":["password","val password: String","entity.user.User.password"]},{"name":"val phoneNumber: String","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.phoneNumber","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/phone-number.html","searchKeys":["phoneNumber","val phoneNumber: String","entity.healthprofessional.HealthProfessionalData.HealthProfessional.phoneNumber"]},{"name":"val role: HealthProfessionalData.HealthProfessionalRole","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.role","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/role.html","searchKeys":["role","val role: HealthProfessionalData.HealthProfessionalRole","entity.healthprofessional.HealthProfessionalData.HealthProfessional.role"]},{"name":"val surname: String","description":"entity.healthprofessional.HealthProfessionalData.HealthProfessional.surname","location":"user-management-integration-microservice/entity.healthprofessional/-health-professional-data/-health-professional/surname.html","searchKeys":["surname","val surname: String","entity.healthprofessional.HealthProfessionalData.HealthProfessional.surname"]},{"name":"val userId: String","description":"entity.user.User.userId","location":"user-management-integration-microservice/entity.user/-user/user-id.html","searchKeys":["userId","val userId: String","entity.user.User.userId"]}]
